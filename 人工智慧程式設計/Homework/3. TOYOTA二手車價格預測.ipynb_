{"cells":[{"cell_type":"markdown","metadata":{"id":"XE_MT11OyPvG"},"source":["# Class"]},{"cell_type":"markdown","metadata":{"id":"DrS43LriaPmK"},"source":["## 資料前處理"]},{"cell_type":"markdown","metadata":{"id":"rlKzU9nGa2VB"},"source":["載入資料集"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"T8BNLYtNZ4Yr"},"outputs":[],"source":["# 先檢查是否存在 HappyML 這個資料夾，若沒有，則下載\n","import os\n","\n","if not os.path.isdir(\"HappyML\"):\n","  os.system(\"git clone https://github.com/cnchi/HappyML.git\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"h4lEAoTro38N"},"outputs":[],"source":["# Upload Dataset from Github\n","Dataset_File = 'ToyotaUsedCars.csv'\n","if not os.path.isfile(\"HappyML\"):\n","  os.system('wget https://raw.githubusercontent.com/cnchi/datasets/master/' + Dataset_File)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"L1BxuilIq4-v"},"outputs":[],"source":["import HappyML.preprocessor as pp\n","dataset = pp.dataset(file = Dataset_File)"]},{"cell_type":"markdown","metadata":{"id":"09HCyh5ma_h0"},"source":["觀察資料集"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":24,"status":"ok","timestamp":1697877999379,"user":{"displayName":"林柏亦","userId":"18385432373658038035"},"user_tz":-480},"id":"B6EyLwAFaspn","outputId":"58742308-dbd2-4ae7-c2f4-597215490f21"},"outputs":[{"name":"stdout","output_type":"stream","text":["               model  year transmission  mileage fuelType  tax   mpg  \\\n","0               GT86  2016       Manual    24089   Petrol  265  36.2   \n","1               GT86  2017       Manual    18615   Petrol  145  36.2   \n","2               GT86  2015       Manual    27469   Petrol  265  36.2   \n","3               GT86  2017       Manual    14736   Petrol  150  36.2   \n","4               GT86  2017       Manual    36284   Petrol  145  36.2   \n","...              ...   ...          ...      ...      ...  ...   ...   \n","6733              IQ  2011    Automatic    30000   Petrol   20  58.9   \n","6734   Urban Cruiser  2011       Manual    36154   Petrol  125  50.4   \n","6735   Urban Cruiser  2012       Manual    46000   Diesel  125  57.6   \n","6736   Urban Cruiser  2011       Manual    60700   Petrol  125  50.4   \n","6737   Urban Cruiser  2011       Manual    45128   Petrol  125  50.4   \n","\n","      engineSize  price  \n","0            2.0  16000  \n","1            2.0  15995  \n","2            2.0  13998  \n","3            2.0  18998  \n","4            2.0  17498  \n","...          ...    ...  \n","6733         1.0   5500  \n","6734         1.3   4985  \n","6735         1.4   4995  \n","6736         1.3   3995  \n","6737         1.3   4495  \n","\n","[6738 rows x 9 columns]\n","--------------------------------------------------------------------------------\n","Index(['model', 'year', 'transmission', 'mileage', 'fuelType', 'tax', 'mpg',\n","       'engineSize', 'price'],\n","      dtype='object')\n"]}],"source":["print(dataset)\n","print('-'*80)\n","print(dataset.keys())"]},{"cell_type":"markdown","metadata":{"id":"WTeKsvN4bJPr"},"source":["切分自變數、應變數."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"7qiSTsm-bSL1"},"outputs":[],"source":["import pandas as pd\n","X, Y = pp.decomposition(dataset = dataset, x_columns = [i for i in range(8)], y_columns=[8])"]},{"cell_type":"markdown","metadata":{"id":"fjF4NbrzbZOw"},"source":["觀察自變數、應變數."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":791,"status":"ok","timestamp":1697878006176,"user":{"displayName":"林柏亦","userId":"18385432373658038035"},"user_tz":-480},"id":"zdU1eqJoasnC","outputId":"bfb71c88-1f16-48c2-f52c-20558c469193"},"outputs":[{"name":"stdout","output_type":"stream","text":["               model  year transmission  mileage fuelType  tax   mpg  \\\n","0               GT86  2016       Manual    24089   Petrol  265  36.2   \n","1               GT86  2017       Manual    18615   Petrol  145  36.2   \n","2               GT86  2015       Manual    27469   Petrol  265  36.2   \n","3               GT86  2017       Manual    14736   Petrol  150  36.2   \n","4               GT86  2017       Manual    36284   Petrol  145  36.2   \n","...              ...   ...          ...      ...      ...  ...   ...   \n","6733              IQ  2011    Automatic    30000   Petrol   20  58.9   \n","6734   Urban Cruiser  2011       Manual    36154   Petrol  125  50.4   \n","6735   Urban Cruiser  2012       Manual    46000   Diesel  125  57.6   \n","6736   Urban Cruiser  2011       Manual    60700   Petrol  125  50.4   \n","6737   Urban Cruiser  2011       Manual    45128   Petrol  125  50.4   \n","\n","      engineSize  \n","0            2.0  \n","1            2.0  \n","2            2.0  \n","3            2.0  \n","4            2.0  \n","...          ...  \n","6733         1.0  \n","6734         1.3  \n","6735         1.4  \n","6736         1.3  \n","6737         1.3  \n","\n","[6738 rows x 8 columns]\n","--------------------------------------------------------------------------------\n","      price\n","0     16000\n","1     15995\n","2     13998\n","3     18998\n","4     17498\n","...     ...\n","6733   5500\n","6734   4985\n","6735   4995\n","6736   3995\n","6737   4495\n","\n","[6738 rows x 1 columns]\n","--------------------------------------------------------------------------------\n","<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 6738 entries, 0 to 6737\n","Data columns (total 8 columns):\n"," #   Column        Non-Null Count  Dtype  \n","---  ------        --------------  -----  \n"," 0   model         6738 non-null   object \n"," 1   year          6738 non-null   int64  \n"," 2   transmission  6738 non-null   object \n"," 3   mileage       6738 non-null   int64  \n"," 4   fuelType      6738 non-null   object \n"," 5   tax           6738 non-null   int64  \n"," 6   mpg           6738 non-null   float64\n"," 7   engineSize    6738 non-null   float64\n","dtypes: float64(2), int64(3), object(3)\n","memory usage: 421.2+ KB\n","None\n","--------------------------------------------------------------------------------\n","              year        mileage          tax          mpg   engineSize\n","count  6738.000000    6738.000000  6738.000000  6738.000000  6738.000000\n","mean   2016.748145   22857.413921    94.697240    63.042223     1.471297\n","std       2.204062   19125.464147    73.880776    15.836710     0.436159\n","min    1998.000000       2.000000     0.000000     2.800000     0.000000\n","25%    2016.000000    9446.000000     0.000000    55.400000     1.000000\n","50%    2017.000000   18513.000000   135.000000    62.800000     1.500000\n","75%    2018.000000   31063.750000   145.000000    69.000000     1.800000\n","max    2020.000000  174419.000000   565.000000   235.000000     4.500000\n"]}],"source":["print(X)\n","print('-'*80)\n","print(Y)\n","print('-'*80)\n","print(X.info())\n","print('-'*80)\n","print(X.describe())"]},{"cell_type":"markdown","metadata":{"id":"FRFQukamsqCI"},"source":["類別資料數位化"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"acmyDRv1suEk"},"outputs":[],"source":["X = pp.onehot_encoder(X, columns = [0, 2, 4], remove_trap = True)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/","height":478},"executionInfo":{"elapsed":16,"status":"ok","timestamp":1697878017534,"user":{"displayName":"林柏亦","userId":"18385432373658038035"},"user_tz":-480},"id":"NSWPgYYYangR","outputId":"7800f8e9-cb13-4cbe-db17-90897c2887be"},"outputs":[{"data":{"text/html":["\n","  <div id=\"df-11ec9793-598e-4984-8b23-a91206673a53\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>model_ Avensis</th>\n","      <th>model_ Aygo</th>\n","      <th>model_ C-HR</th>\n","      <th>model_ Camry</th>\n","      <th>model_ Corolla</th>\n","      <th>model_ GT86</th>\n","      <th>model_ Hilux</th>\n","      <th>model_ IQ</th>\n","      <th>model_ Land Cruiser</th>\n","      <th>model_ PROACE VERSO</th>\n","      <th>...</th>\n","      <th>transmission_Manual</th>\n","      <th>transmission_Other</th>\n","      <th>transmission_Semi-Auto</th>\n","      <th>mileage</th>\n","      <th>fuelType_Hybrid</th>\n","      <th>fuelType_Other</th>\n","      <th>fuelType_Petrol</th>\n","      <th>tax</th>\n","      <th>mpg</th>\n","      <th>engineSize</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>24089</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>265</td>\n","      <td>36.2</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>18615</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>145</td>\n","      <td>36.2</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>27469</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>265</td>\n","      <td>36.2</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>14736</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>150</td>\n","      <td>36.2</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>36284</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>145</td>\n","      <td>36.2</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>6733</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>20</td>\n","      <td>58.9</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>6734</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>36154</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>125</td>\n","      <td>50.4</td>\n","      <td>1.3</td>\n","    </tr>\n","    <tr>\n","      <th>6735</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>46000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>125</td>\n","      <td>57.6</td>\n","      <td>1.4</td>\n","    </tr>\n","    <tr>\n","      <th>6736</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>60700</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>125</td>\n","      <td>50.4</td>\n","      <td>1.3</td>\n","    </tr>\n","    <tr>\n","      <th>6737</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>45128</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>125</td>\n","      <td>50.4</td>\n","      <td>1.3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>6738 rows × 28 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-11ec9793-598e-4984-8b23-a91206673a53')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-11ec9793-598e-4984-8b23-a91206673a53 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-11ec9793-598e-4984-8b23-a91206673a53');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5c395a2f-7b43-4de1-aa91-94b7bb1d9f94\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5c395a2f-7b43-4de1-aa91-94b7bb1d9f94')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5c395a2f-7b43-4de1-aa91-94b7bb1d9f94 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"text/plain":["      model_ Avensis  model_ Aygo  model_ C-HR  model_ Camry  model_ Corolla  \\\n","0                  0            0            0             0               0   \n","1                  0            0            0             0               0   \n","2                  0            0            0             0               0   \n","3                  0            0            0             0               0   \n","4                  0            0            0             0               0   \n","...              ...          ...          ...           ...             ...   \n","6733               0            0            0             0               0   \n","6734               0            0            0             0               0   \n","6735               0            0            0             0               0   \n","6736               0            0            0             0               0   \n","6737               0            0            0             0               0   \n","\n","      model_ GT86  model_ Hilux  model_ IQ  model_ Land Cruiser  \\\n","0               1             0          0                    0   \n","1               1             0          0                    0   \n","2               1             0          0                    0   \n","3               1             0          0                    0   \n","4               1             0          0                    0   \n","...           ...           ...        ...                  ...   \n","6733            0             0          1                    0   \n","6734            0             0          0                    0   \n","6735            0             0          0                    0   \n","6736            0             0          0                    0   \n","6737            0             0          0                    0   \n","\n","      model_ PROACE VERSO  ...  transmission_Manual  transmission_Other  \\\n","0                       0  ...                    1                   0   \n","1                       0  ...                    1                   0   \n","2                       0  ...                    1                   0   \n","3                       0  ...                    1                   0   \n","4                       0  ...                    1                   0   \n","...                   ...  ...                  ...                 ...   \n","6733                    0  ...                    0                   0   \n","6734                    0  ...                    1                   0   \n","6735                    0  ...                    1                   0   \n","6736                    0  ...                    1                   0   \n","6737                    0  ...                    1                   0   \n","\n","      transmission_Semi-Auto  mileage  fuelType_Hybrid  fuelType_Other  \\\n","0                          0    24089                0               0   \n","1                          0    18615                0               0   \n","2                          0    27469                0               0   \n","3                          0    14736                0               0   \n","4                          0    36284                0               0   \n","...                      ...      ...              ...             ...   \n","6733                       0    30000                0               0   \n","6734                       0    36154                0               0   \n","6735                       0    46000                0               0   \n","6736                       0    60700                0               0   \n","6737                       0    45128                0               0   \n","\n","      fuelType_Petrol  tax   mpg  engineSize  \n","0                   1  265  36.2         2.0  \n","1                   1  145  36.2         2.0  \n","2                   1  265  36.2         2.0  \n","3                   1  150  36.2         2.0  \n","4                   1  145  36.2         2.0  \n","...               ...  ...   ...         ...  \n","6733                1   20  58.9         1.0  \n","6734                1  125  50.4         1.3  \n","6735                0  125  57.6         1.4  \n","6736                1  125  50.4         1.3  \n","6737                1  125  50.4         1.3  \n","\n","[6738 rows x 28 columns]"]},"execution_count":155,"metadata":{},"output_type":"execute_result"}],"source":["X"]},{"cell_type":"markdown","metadata":{"id":"07I6_3LCbgD8"},"source":["切分訓練集、測試集與特徵縮放"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"lOrENC2FaskY"},"outputs":[],"source":["# Split Training vs. Testing Data\n","X_train, X_test, Y_train, Y_test = pp.split_train_test(X, Y, train_size=0.8)\n","\n","# Feature Scaling\n","X_train, X_test = pp.feature_scaling(fit_ary=X_train, transform_arys=(X_train, X_test))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/","height":478},"executionInfo":{"elapsed":21,"status":"ok","timestamp":1697817346410,"user":{"displayName":"林柏亦","userId":"18385432373658038035"},"user_tz":-480},"id":"k5abEaJrzLem","outputId":"5b73f9c2-cfcd-4cd8-f79b-4c2c507f501f"},"outputs":[{"data":{"text/html":["\n","  <div id=\"df-acb000d1-6679-491b-9a6b-6172d98d03b7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>model_ Avensis</th>\n","      <th>model_ Aygo</th>\n","      <th>model_ C-HR</th>\n","      <th>model_ Camry</th>\n","      <th>model_ Corolla</th>\n","      <th>model_ GT86</th>\n","      <th>model_ Hilux</th>\n","      <th>model_ IQ</th>\n","      <th>model_ Land Cruiser</th>\n","      <th>model_ PROACE VERSO</th>\n","      <th>...</th>\n","      <th>transmission_Manual</th>\n","      <th>transmission_Other</th>\n","      <th>transmission_Semi-Auto</th>\n","      <th>mileage</th>\n","      <th>fuelType_Hybrid</th>\n","      <th>fuelType_Other</th>\n","      <th>fuelType_Petrol</th>\n","      <th>tax</th>\n","      <th>mpg</th>\n","      <th>engineSize</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2534</th>\n","      <td>-0.140266</td>\n","      <td>-0.642241</td>\n","      <td>-0.271093</td>\n","      <td>-0.040897</td>\n","      <td>-0.203334</td>\n","      <td>-0.10875</td>\n","      <td>-0.112191</td>\n","      <td>-0.030471</td>\n","      <td>-0.082</td>\n","      <td>-0.04917</td>\n","      <td>...</td>\n","      <td>0.869639</td>\n","      <td>-0.013622</td>\n","      <td>-0.200347</td>\n","      <td>-0.363800</td>\n","      <td>-0.659574</td>\n","      <td>-0.124292</td>\n","      <td>0.803930</td>\n","      <td>-1.281856</td>\n","      <td>0.190628</td>\n","      <td>-1.086697</td>\n","    </tr>\n","    <tr>\n","      <th>3205</th>\n","      <td>-0.140266</td>\n","      <td>-0.642241</td>\n","      <td>-0.271093</td>\n","      <td>-0.040897</td>\n","      <td>-0.203334</td>\n","      <td>-0.10875</td>\n","      <td>-0.112191</td>\n","      <td>-0.030471</td>\n","      <td>-0.082</td>\n","      <td>-0.04917</td>\n","      <td>...</td>\n","      <td>0.869639</td>\n","      <td>-0.013622</td>\n","      <td>-0.200347</td>\n","      <td>-0.345123</td>\n","      <td>-0.659574</td>\n","      <td>-0.124292</td>\n","      <td>0.803930</td>\n","      <td>-0.874738</td>\n","      <td>-0.261240</td>\n","      <td>-0.625728</td>\n","    </tr>\n","    <tr>\n","      <th>5148</th>\n","      <td>-0.140266</td>\n","      <td>1.557047</td>\n","      <td>-0.271093</td>\n","      <td>-0.040897</td>\n","      <td>-0.203334</td>\n","      <td>-0.10875</td>\n","      <td>-0.112191</td>\n","      <td>-0.030471</td>\n","      <td>-0.082</td>\n","      <td>-0.04917</td>\n","      <td>...</td>\n","      <td>0.869639</td>\n","      <td>-0.013622</td>\n","      <td>-0.200347</td>\n","      <td>-0.647177</td>\n","      <td>-0.659574</td>\n","      <td>-0.124292</td>\n","      <td>0.803930</td>\n","      <td>0.685882</td>\n","      <td>-0.413984</td>\n","      <td>-1.086697</td>\n","    </tr>\n","    <tr>\n","      <th>2529</th>\n","      <td>-0.140266</td>\n","      <td>-0.642241</td>\n","      <td>-0.271093</td>\n","      <td>-0.040897</td>\n","      <td>-0.203334</td>\n","      <td>-0.10875</td>\n","      <td>-0.112191</td>\n","      <td>-0.030471</td>\n","      <td>-0.082</td>\n","      <td>-0.04917</td>\n","      <td>...</td>\n","      <td>-1.149902</td>\n","      <td>-0.013622</td>\n","      <td>-0.200347</td>\n","      <td>-0.677735</td>\n","      <td>-0.659574</td>\n","      <td>-0.124292</td>\n","      <td>0.803930</td>\n","      <td>-0.874738</td>\n","      <td>-0.318519</td>\n","      <td>-0.395244</td>\n","    </tr>\n","    <tr>\n","      <th>2815</th>\n","      <td>-0.140266</td>\n","      <td>-0.642241</td>\n","      <td>-0.271093</td>\n","      <td>-0.040897</td>\n","      <td>-0.203334</td>\n","      <td>-0.10875</td>\n","      <td>-0.112191</td>\n","      <td>-0.030471</td>\n","      <td>-0.082</td>\n","      <td>-0.04917</td>\n","      <td>...</td>\n","      <td>0.869639</td>\n","      <td>-0.013622</td>\n","      <td>-0.200347</td>\n","      <td>0.848151</td>\n","      <td>-0.659574</td>\n","      <td>-0.124292</td>\n","      <td>0.803930</td>\n","      <td>-0.874738</td>\n","      <td>-0.483991</td>\n","      <td>-0.395244</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4885</th>\n","      <td>-0.140266</td>\n","      <td>1.557047</td>\n","      <td>-0.271093</td>\n","      <td>-0.040897</td>\n","      <td>-0.203334</td>\n","      <td>-0.10875</td>\n","      <td>-0.112191</td>\n","      <td>-0.030471</td>\n","      <td>-0.082</td>\n","      <td>-0.04917</td>\n","      <td>...</td>\n","      <td>0.869639</td>\n","      <td>-0.013622</td>\n","      <td>-0.200347</td>\n","      <td>-0.858749</td>\n","      <td>-0.659574</td>\n","      <td>-0.124292</td>\n","      <td>0.803930</td>\n","      <td>0.685882</td>\n","      <td>-0.413984</td>\n","      <td>-1.086697</td>\n","    </tr>\n","    <tr>\n","      <th>3164</th>\n","      <td>-0.140266</td>\n","      <td>-0.642241</td>\n","      <td>-0.271093</td>\n","      <td>-0.040897</td>\n","      <td>-0.203334</td>\n","      <td>-0.10875</td>\n","      <td>-0.112191</td>\n","      <td>-0.030471</td>\n","      <td>-0.082</td>\n","      <td>-0.04917</td>\n","      <td>...</td>\n","      <td>0.869639</td>\n","      <td>-0.013622</td>\n","      <td>-0.200347</td>\n","      <td>-0.756076</td>\n","      <td>-0.659574</td>\n","      <td>-0.124292</td>\n","      <td>0.803930</td>\n","      <td>0.414470</td>\n","      <td>-0.681285</td>\n","      <td>-0.625728</td>\n","    </tr>\n","    <tr>\n","      <th>1848</th>\n","      <td>-0.140266</td>\n","      <td>-0.642241</td>\n","      <td>-0.271093</td>\n","      <td>-0.040897</td>\n","      <td>-0.203334</td>\n","      <td>-0.10875</td>\n","      <td>-0.112191</td>\n","      <td>-0.030471</td>\n","      <td>-0.082</td>\n","      <td>-0.04917</td>\n","      <td>...</td>\n","      <td>0.869639</td>\n","      <td>-0.013622</td>\n","      <td>-0.200347</td>\n","      <td>-0.021382</td>\n","      <td>-0.659574</td>\n","      <td>-0.124292</td>\n","      <td>0.803930</td>\n","      <td>-0.874738</td>\n","      <td>-0.318519</td>\n","      <td>-0.395244</td>\n","    </tr>\n","    <tr>\n","      <th>3866</th>\n","      <td>-0.140266</td>\n","      <td>1.557047</td>\n","      <td>-0.271093</td>\n","      <td>-0.040897</td>\n","      <td>-0.203334</td>\n","      <td>-0.10875</td>\n","      <td>-0.112191</td>\n","      <td>-0.030471</td>\n","      <td>-0.082</td>\n","      <td>-0.04917</td>\n","      <td>...</td>\n","      <td>0.869639</td>\n","      <td>-0.013622</td>\n","      <td>-0.200347</td>\n","      <td>-0.648992</td>\n","      <td>-0.659574</td>\n","      <td>-0.124292</td>\n","      <td>0.803930</td>\n","      <td>0.685882</td>\n","      <td>0.381557</td>\n","      <td>-1.086697</td>\n","    </tr>\n","    <tr>\n","      <th>6004</th>\n","      <td>-0.140266</td>\n","      <td>-0.642241</td>\n","      <td>3.688773</td>\n","      <td>-0.040897</td>\n","      <td>-0.203334</td>\n","      <td>-0.10875</td>\n","      <td>-0.112191</td>\n","      <td>-0.030471</td>\n","      <td>-0.082</td>\n","      <td>-0.04917</td>\n","      <td>...</td>\n","      <td>-1.149902</td>\n","      <td>-0.013622</td>\n","      <td>-0.200347</td>\n","      <td>-1.093772</td>\n","      <td>1.516131</td>\n","      <td>-0.124292</td>\n","      <td>-1.243889</td>\n","      <td>0.618029</td>\n","      <td>-0.337612</td>\n","      <td>0.757177</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5390 rows × 28 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-acb000d1-6679-491b-9a6b-6172d98d03b7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-acb000d1-6679-491b-9a6b-6172d98d03b7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-acb000d1-6679-491b-9a6b-6172d98d03b7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fd448aaf-a30d-4318-95d8-065c8e52cb8e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fd448aaf-a30d-4318-95d8-065c8e52cb8e')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fd448aaf-a30d-4318-95d8-065c8e52cb8e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"text/plain":["      model_ Avensis  model_ Aygo  model_ C-HR  model_ Camry  model_ Corolla  \\\n","2534       -0.140266    -0.642241    -0.271093     -0.040897       -0.203334   \n","3205       -0.140266    -0.642241    -0.271093     -0.040897       -0.203334   \n","5148       -0.140266     1.557047    -0.271093     -0.040897       -0.203334   \n","2529       -0.140266    -0.642241    -0.271093     -0.040897       -0.203334   \n","2815       -0.140266    -0.642241    -0.271093     -0.040897       -0.203334   \n","...              ...          ...          ...           ...             ...   \n","4885       -0.140266     1.557047    -0.271093     -0.040897       -0.203334   \n","3164       -0.140266    -0.642241    -0.271093     -0.040897       -0.203334   \n","1848       -0.140266    -0.642241    -0.271093     -0.040897       -0.203334   \n","3866       -0.140266     1.557047    -0.271093     -0.040897       -0.203334   \n","6004       -0.140266    -0.642241     3.688773     -0.040897       -0.203334   \n","\n","      model_ GT86  model_ Hilux  model_ IQ  model_ Land Cruiser  \\\n","2534     -0.10875     -0.112191  -0.030471               -0.082   \n","3205     -0.10875     -0.112191  -0.030471               -0.082   \n","5148     -0.10875     -0.112191  -0.030471               -0.082   \n","2529     -0.10875     -0.112191  -0.030471               -0.082   \n","2815     -0.10875     -0.112191  -0.030471               -0.082   \n","...           ...           ...        ...                  ...   \n","4885     -0.10875     -0.112191  -0.030471               -0.082   \n","3164     -0.10875     -0.112191  -0.030471               -0.082   \n","1848     -0.10875     -0.112191  -0.030471               -0.082   \n","3866     -0.10875     -0.112191  -0.030471               -0.082   \n","6004     -0.10875     -0.112191  -0.030471               -0.082   \n","\n","      model_ PROACE VERSO  ...  transmission_Manual  transmission_Other  \\\n","2534             -0.04917  ...             0.869639           -0.013622   \n","3205             -0.04917  ...             0.869639           -0.013622   \n","5148             -0.04917  ...             0.869639           -0.013622   \n","2529             -0.04917  ...            -1.149902           -0.013622   \n","2815             -0.04917  ...             0.869639           -0.013622   \n","...                   ...  ...                  ...                 ...   \n","4885             -0.04917  ...             0.869639           -0.013622   \n","3164             -0.04917  ...             0.869639           -0.013622   \n","1848             -0.04917  ...             0.869639           -0.013622   \n","3866             -0.04917  ...             0.869639           -0.013622   \n","6004             -0.04917  ...            -1.149902           -0.013622   \n","\n","      transmission_Semi-Auto   mileage  fuelType_Hybrid  fuelType_Other  \\\n","2534               -0.200347 -0.363800        -0.659574       -0.124292   \n","3205               -0.200347 -0.345123        -0.659574       -0.124292   \n","5148               -0.200347 -0.647177        -0.659574       -0.124292   \n","2529               -0.200347 -0.677735        -0.659574       -0.124292   \n","2815               -0.200347  0.848151        -0.659574       -0.124292   \n","...                      ...       ...              ...             ...   \n","4885               -0.200347 -0.858749        -0.659574       -0.124292   \n","3164               -0.200347 -0.756076        -0.659574       -0.124292   \n","1848               -0.200347 -0.021382        -0.659574       -0.124292   \n","3866               -0.200347 -0.648992        -0.659574       -0.124292   \n","6004               -0.200347 -1.093772         1.516131       -0.124292   \n","\n","      fuelType_Petrol       tax       mpg  engineSize  \n","2534         0.803930 -1.281856  0.190628   -1.086697  \n","3205         0.803930 -0.874738 -0.261240   -0.625728  \n","5148         0.803930  0.685882 -0.413984   -1.086697  \n","2529         0.803930 -0.874738 -0.318519   -0.395244  \n","2815         0.803930 -0.874738 -0.483991   -0.395244  \n","...               ...       ...       ...         ...  \n","4885         0.803930  0.685882 -0.413984   -1.086697  \n","3164         0.803930  0.414470 -0.681285   -0.625728  \n","1848         0.803930 -0.874738 -0.318519   -0.395244  \n","3866         0.803930  0.685882  0.381557   -1.086697  \n","6004        -1.243889  0.618029 -0.337612    0.757177  \n","\n","[5390 rows x 28 columns]"]},"execution_count":157,"metadata":{},"output_type":"execute_result"}],"source":["X_train"]},{"cell_type":"markdown","metadata":{"id":"pj5mSDdTaTgh"},"source":["## 建構神經網路"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"03Q2rQ50aW1d"},"outputs":[],"source":["from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense\n","\n","regression_model = Sequential()\n","regression_model.add(Dense(input_dim=X_train.shape[1], units=459, kernel_initializer=\"glorot_normal\", activation=\"relu\"))\n","regression_model.add(Dense(units=9, kernel_initializer=\"glorot_normal\", activation=\"relu\"))\n","regression_model.add(Dense(units=1, kernel_initializer=\"glorot_normal\", activation=\"linear\"))"]},{"cell_type":"markdown","metadata":{"id":"4iJjNPKZcKAp"},"source":["觀察神經網路."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":15,"status":"ok","timestamp":1697817192988,"user":{"displayName":"林柏亦","userId":"18385432373658038035"},"user_tz":-480},"id":"TTqGeP90cJid","outputId":"9faa1180-6a4a-47ab-b5c6-39ab1278b7ab"},"outputs":[{"name":"stdout","output_type":"stream","text":["Model: \"sequential_5\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense_15 (Dense)            (None, 459)               13311     \n","                                                                 \n"," dense_16 (Dense)            (None, 9)                 4140      \n","                                                                 \n"," dense_17 (Dense)            (None, 1)                 10        \n","                                                                 \n","=================================================================\n","Total params: 17,461\n","Trainable params: 17,461\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","--------------------------------------------------------------------------------\n","[<KerasTensor: shape=(None, 28) dtype=float32 (created by layer 'dense_15_input')>]\n","--------------------------------------------------------------------------------\n","[<KerasTensor: shape=(None, 1) dtype=float32 (created by layer 'dense_17')>]\n"]}],"source":["print(regression_model.summary())\n","print('-'*80)\n","print(regression_model.inputs)\n","print('-'*80)\n","print(regression_model.outputs)"]},{"cell_type":"markdown","metadata":{"id":"VxF4qMCWcR_k"},"source":["編譯 神經網路"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"0W9KqDlGcWjs"},"outputs":[],"source":["regression_model.compile(optimizer=\"adam\", loss=\"mse\", metrics=[\"mse\"])"]},{"cell_type":"markdown","metadata":{"id":"kN3T96tPaXpk"},"source":["## 模型訓練與校正"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":22456,"status":"ok","timestamp":1697817220161,"user":{"displayName":"林柏亦","userId":"18385432373658038035"},"user_tz":-480},"id":"QPPtKQ-tcbs7","outputId":"2877ae46-4301-4f95-e33d-ce828f11aba9"},"outputs":[{"name":"stdout","output_type":"stream","text":["Epoch 1/7\n","863/863 [==============================] - 5s 5ms/step - loss: 120939696.0000 - mse: 120939696.0000 - val_loss: 19742038.0000 - val_mse: 19742038.0000\n","Epoch 2/7\n","863/863 [==============================] - 2s 3ms/step - loss: 15046975.0000 - mse: 15046975.0000 - val_loss: 9501821.0000 - val_mse: 9501821.0000\n","Epoch 3/7\n","863/863 [==============================] - 2s 2ms/step - loss: 10055842.0000 - mse: 10055841.0000 - val_loss: 6819610.0000 - val_mse: 6819610.0000\n","Epoch 4/7\n","863/863 [==============================] - 2s 2ms/step - loss: 7292117.0000 - mse: 7292117.0000 - val_loss: 5092557.5000 - val_mse: 5092557.5000\n","Epoch 5/7\n","863/863 [==============================] - 2s 2ms/step - loss: 5336770.5000 - mse: 5336770.5000 - val_loss: 3836435.5000 - val_mse: 3836435.5000\n","Epoch 6/7\n","863/863 [==============================] - 3s 3ms/step - loss: 3965502.5000 - mse: 3965502.5000 - val_loss: 3029982.7500 - val_mse: 3029982.7500\n","Epoch 7/7\n","863/863 [==============================] - 3s 4ms/step - loss: 3158291.5000 - mse: 3158291.5000 - val_loss: 2644622.0000 - val_mse: 2644622.0000\n"]}],"source":["epochs_metrics = regression_model.fit(x=X_train, y=Y_train, validation_split=0.2, batch_size=5, epochs=7)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/","height":927},"executionInfo":{"elapsed":1056,"status":"ok","timestamp":1697817223915,"user":{"displayName":"林柏亦","userId":"18385432373658038035"},"user_tz":-480},"id":"VknOjKt3cbqD","outputId":"61fc0f99-5480-4262-d1d1-8adef26f0420"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# Model Adjustment\n","import HappyML.model_drawer as md\n","\n","md.epochs_metrics_plot(epochs_metrics.history, keys=(\"loss\", \"val_loss\"), title=\"Loss of Training vs. Validating\", xyLabel=(\"Epochs\", \"Loss\"))\n","md.epochs_metrics_plot(epochs_metrics.history, keys=(\"mse\", \"val_mse\"), title=\"MSE of Training vs. Validating\", xyLabel=(\"Epochs\", \"MSE\"))"]},{"cell_type":"markdown","metadata":{"id":"umUOXxckaXYX"},"source":["## 模型預測與評估"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/","height":442},"executionInfo":{"elapsed":617,"status":"ok","timestamp":1697884545452,"user":{"displayName":"林柏亦","userId":"18385432373658038035"},"user_tz":-480},"id":"_o0qYpl-aeYA","outputId":"dfb34445-dd6a-4f3b-f339-0f8a6fb86bc3"},"outputs":[{"name":"stdout","output_type":"stream","text":["43/43 [==============================] - 0s 3ms/step\n","      price         price\n","5441   9200   9770.162109\n","2994  10998  10939.025391\n","2479   2495   4969.192383\n","1845   8190   8335.352539\n","5242   6989   6537.823242\n","...     ...           ...\n","1999  11300   9688.192383\n","1046   9798   9034.536133\n","4747   7995   6913.262695\n","3851   7795   7675.990234\n","5937  22290  20623.875000\n","\n","[1348 rows x 2 columns]\n"]}],"source":["# Predict\n","import pandas as pd\n","Y_pred = pd.DataFrame(regression_model.predict(x=X_test), index=‘, columns=Y_test.columns)\n","\n","# Show the Predict Result\n","df = pd.concat([Y_test, Y_pred], axis=1)\n","print(df)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":700,"status":"ok","timestamp":1697884551351,"user":{"displayName":"林柏亦","userId":"18385432373658038035"},"user_tz":-480},"id":"NQtU-5dIaheN","outputId":"41380bd4-7fe4-4b8a-a54a-f6796deff39a"},"outputs":[{"name":"stdout","output_type":"stream","text":["43/43 [==============================] - 0s 2ms/step - loss: 3558345.0000 - mse: 3558345.0000\n","Loss of Testing Set: 3558345.0\n","MSE of Testing Set: 3558345.0\n"]}],"source":["# Evaluation\n","test_loss, test_mse = regression_model.evaluate(X_test, Y_test)\n","print(\"Loss of Testing Set:\", test_loss)\n","print(\"MSE of Testing Set:\", test_mse)"]},{"cell_type":"markdown","metadata":{"id":"GDncGhtfySBX"},"source":["# Self: 儘量不用Happy 程式碼"]},{"cell_type":"code","execution_count":166,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"elapsed":292,"status":"ok","timestamp":1697885030210,"user":{"displayName":"林柏亦","userId":"18385432373658038035"},"user_tz":-480},"id":"uEnSsmCSyTxc","outputId":"f02c2660-6d49-4970-caa4-8c8c733b18b9"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["               model  year transmission  mileage fuelType  tax   mpg  \\\n","0               GT86  2016       Manual    24089   Petrol  265  36.2   \n","1               GT86  2017       Manual    18615   Petrol  145  36.2   \n","2               GT86  2015       Manual    27469   Petrol  265  36.2   \n","3               GT86  2017       Manual    14736   Petrol  150  36.2   \n","4               GT86  2017       Manual    36284   Petrol  145  36.2   \n","...              ...   ...          ...      ...      ...  ...   ...   \n","6733              IQ  2011    Automatic    30000   Petrol   20  58.9   \n","6734   Urban Cruiser  2011       Manual    36154   Petrol  125  50.4   \n","6735   Urban Cruiser  2012       Manual    46000   Diesel  125  57.6   \n","6736   Urban Cruiser  2011       Manual    60700   Petrol  125  50.4   \n","6737   Urban Cruiser  2011       Manual    45128   Petrol  125  50.4   \n","\n","      engineSize  price  \n","0            2.0  16000  \n","1            2.0  15995  \n","2            2.0  13998  \n","3            2.0  18998  \n","4            2.0  17498  \n","...          ...    ...  \n","6733         1.0   5500  \n","6734         1.3   4985  \n","6735         1.4   4995  \n","6736         1.3   3995  \n","6737         1.3   4495  \n","\n","[6738 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-c62a18c3-7fe3-487c-a4f6-765ad360e69e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>model</th>\n","      <th>year</th>\n","      <th>transmission</th>\n","      <th>mileage</th>\n","      <th>fuelType</th>\n","      <th>tax</th>\n","      <th>mpg</th>\n","      <th>engineSize</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>GT86</td>\n","      <td>2016</td>\n","      <td>Manual</td>\n","      <td>24089</td>\n","      <td>Petrol</td>\n","      <td>265</td>\n","      <td>36.2</td>\n","      <td>2.0</td>\n","      <td>16000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>GT86</td>\n","      <td>2017</td>\n","      <td>Manual</td>\n","      <td>18615</td>\n","      <td>Petrol</td>\n","      <td>145</td>\n","      <td>36.2</td>\n","      <td>2.0</td>\n","      <td>15995</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>GT86</td>\n","      <td>2015</td>\n","      <td>Manual</td>\n","      <td>27469</td>\n","      <td>Petrol</td>\n","      <td>265</td>\n","      <td>36.2</td>\n","      <td>2.0</td>\n","      <td>13998</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>GT86</td>\n","      <td>2017</td>\n","      <td>Manual</td>\n","      <td>14736</td>\n","      <td>Petrol</td>\n","      <td>150</td>\n","      <td>36.2</td>\n","      <td>2.0</td>\n","      <td>18998</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>GT86</td>\n","      <td>2017</td>\n","      <td>Manual</td>\n","      <td>36284</td>\n","      <td>Petrol</td>\n","      <td>145</td>\n","      <td>36.2</td>\n","      <td>2.0</td>\n","      <td>17498</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>6733</th>\n","      <td>IQ</td>\n","      <td>2011</td>\n","      <td>Automatic</td>\n","      <td>30000</td>\n","      <td>Petrol</td>\n","      <td>20</td>\n","      <td>58.9</td>\n","      <td>1.0</td>\n","      <td>5500</td>\n","    </tr>\n","    <tr>\n","      <th>6734</th>\n","      <td>Urban Cruiser</td>\n","      <td>2011</td>\n","      <td>Manual</td>\n","      <td>36154</td>\n","      <td>Petrol</td>\n","      <td>125</td>\n","      <td>50.4</td>\n","      <td>1.3</td>\n","      <td>4985</td>\n","    </tr>\n","    <tr>\n","      <th>6735</th>\n","      <td>Urban Cruiser</td>\n","      <td>2012</td>\n","      <td>Manual</td>\n","      <td>46000</td>\n","      <td>Diesel</td>\n","      <td>125</td>\n","      <td>57.6</td>\n","      <td>1.4</td>\n","      <td>4995</td>\n","    </tr>\n","    <tr>\n","      <th>6736</th>\n","      <td>Urban Cruiser</td>\n","      <td>2011</td>\n","      <td>Manual</td>\n","      <td>60700</td>\n","      <td>Petrol</td>\n","      <td>125</td>\n","      <td>50.4</td>\n","      <td>1.3</td>\n","      <td>3995</td>\n","    </tr>\n","    <tr>\n","      <th>6737</th>\n","      <td>Urban Cruiser</td>\n","      <td>2011</td>\n","      <td>Manual</td>\n","      <td>45128</td>\n","      <td>Petrol</td>\n","      <td>125</td>\n","      <td>50.4</td>\n","      <td>1.3</td>\n","      <td>4495</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>6738 rows × 9 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c62a18c3-7fe3-487c-a4f6-765ad360e69e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c62a18c3-7fe3-487c-a4f6-765ad360e69e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c62a18c3-7fe3-487c-a4f6-765ad360e69e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-db2664d4-2052-4332-a007-4776b232c355\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-db2664d4-2052-4332-a007-4776b232c355')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-db2664d4-2052-4332-a007-4776b232c355 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":166}],"source":["import numpy as np\n","import pandas as pd\n","dataset = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/人工智慧程式設計/Homework/ToyotaUsedCars.csv')\n","dataset"]},{"cell_type":"code","execution_count":167,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"elapsed":13,"status":"ok","timestamp":1697885030543,"user":{"displayName":"林柏亦","userId":"18385432373658038035"},"user_tz":-480},"id":"U4zL6Fl1cxuj","outputId":"74dac833-36f0-43c3-da1a-05b2f35d3a71"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["              year        mileage          tax          mpg   engineSize  \\\n","count  6738.000000    6738.000000  6738.000000  6738.000000  6738.000000   \n","mean   2016.748145   22857.413921    94.697240    63.042223     1.471297   \n","std       2.204062   19125.464147    73.880776    15.836710     0.436159   \n","min    1998.000000       2.000000     0.000000     2.800000     0.000000   \n","25%    2016.000000    9446.000000     0.000000    55.400000     1.000000   \n","50%    2017.000000   18513.000000   135.000000    62.800000     1.500000   \n","75%    2018.000000   31063.750000   145.000000    69.000000     1.800000   \n","max    2020.000000  174419.000000   565.000000   235.000000     4.500000   \n","\n","              price  \n","count   6738.000000  \n","mean   12522.391066  \n","std     6345.017587  \n","min      850.000000  \n","25%     8290.000000  \n","50%    10795.000000  \n","75%    14995.000000  \n","max    59995.000000  "],"text/html":["\n","  <div id=\"df-deb7008c-8dec-4142-95bb-1c7240bf5993\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>mileage</th>\n","      <th>tax</th>\n","      <th>mpg</th>\n","      <th>engineSize</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>6738.000000</td>\n","      <td>6738.000000</td>\n","      <td>6738.000000</td>\n","      <td>6738.000000</td>\n","      <td>6738.000000</td>\n","      <td>6738.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2016.748145</td>\n","      <td>22857.413921</td>\n","      <td>94.697240</td>\n","      <td>63.042223</td>\n","      <td>1.471297</td>\n","      <td>12522.391066</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>2.204062</td>\n","      <td>19125.464147</td>\n","      <td>73.880776</td>\n","      <td>15.836710</td>\n","      <td>0.436159</td>\n","      <td>6345.017587</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1998.000000</td>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","      <td>2.800000</td>\n","      <td>0.000000</td>\n","      <td>850.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2016.000000</td>\n","      <td>9446.000000</td>\n","      <td>0.000000</td>\n","      <td>55.400000</td>\n","      <td>1.000000</td>\n","      <td>8290.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>2017.000000</td>\n","      <td>18513.000000</td>\n","      <td>135.000000</td>\n","      <td>62.800000</td>\n","      <td>1.500000</td>\n","      <td>10795.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2018.000000</td>\n","      <td>31063.750000</td>\n","      <td>145.000000</td>\n","      <td>69.000000</td>\n","      <td>1.800000</td>\n","      <td>14995.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2020.000000</td>\n","      <td>174419.000000</td>\n","      <td>565.000000</td>\n","      <td>235.000000</td>\n","      <td>4.500000</td>\n","      <td>59995.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-deb7008c-8dec-4142-95bb-1c7240bf5993')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-deb7008c-8dec-4142-95bb-1c7240bf5993 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-deb7008c-8dec-4142-95bb-1c7240bf5993');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-71a3f032-1281-4ad0-b93c-0ca3efd61ba3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-71a3f032-1281-4ad0-b93c-0ca3efd61ba3')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-71a3f032-1281-4ad0-b93c-0ca3efd61ba3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":167}],"source":["dataset.describe()"]},{"cell_type":"markdown","metadata":{"id":"EYX_JZ1Ncgct"},"source":["## Data Pre-Processing"]},{"cell_type":"markdown","metadata":{"id":"jKEIN4gwNIwZ"},"source":["Observe the dataset"]},{"cell_type":"code","execution_count":168,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":12,"status":"ok","timestamp":1697885030544,"user":{"displayName":"林柏亦","userId":"18385432373658038035"},"user_tz":-480},"id":"kFSkidf10-_X","outputId":"b087108f-da7c-4800-d57f-23c833a95fcb"},"outputs":[{"output_type":"stream","name":"stdout","text":["               model  year transmission  mileage fuelType  tax   mpg  \\\n","0               GT86  2016       Manual    24089   Petrol  265  36.2   \n","1               GT86  2017       Manual    18615   Petrol  145  36.2   \n","2               GT86  2015       Manual    27469   Petrol  265  36.2   \n","3               GT86  2017       Manual    14736   Petrol  150  36.2   \n","4               GT86  2017       Manual    36284   Petrol  145  36.2   \n","...              ...   ...          ...      ...      ...  ...   ...   \n","6733              IQ  2011    Automatic    30000   Petrol   20  58.9   \n","6734   Urban Cruiser  2011       Manual    36154   Petrol  125  50.4   \n","6735   Urban Cruiser  2012       Manual    46000   Diesel  125  57.6   \n","6736   Urban Cruiser  2011       Manual    60700   Petrol  125  50.4   \n","6737   Urban Cruiser  2011       Manual    45128   Petrol  125  50.4   \n","\n","      engineSize  price  \n","0            2.0  16000  \n","1            2.0  15995  \n","2            2.0  13998  \n","3            2.0  18998  \n","4            2.0  17498  \n","...          ...    ...  \n","6733         1.0   5500  \n","6734         1.3   4985  \n","6735         1.4   4995  \n","6736         1.3   3995  \n","6737         1.3   4495  \n","\n","[6738 rows x 9 columns]\n","--------------------------------------------------------------------------------\n","Index(['model', 'year', 'transmission', 'mileage', 'fuelType', 'tax', 'mpg',\n","       'engineSize', 'price'],\n","      dtype='object')\n"]}],"source":["print(dataset)\n","print('-'*80)\n","print(dataset.keys())"]},{"cell_type":"markdown","metadata":{"id":"8fY0xZycLcRM"},"source":["檢查是否有缺失資料, 再算每列有幾個, 再看看整個dataframe總共有幾個缺失資料"]},{"cell_type":"code","execution_count":169,"metadata":{"executionInfo":{"elapsed":10,"status":"ok","timestamp":1697885030544,"user":{"displayName":"林柏亦","userId":"18385432373658038035"},"user_tz":-480},"id":"NnqTAS8TLP3A"},"outputs":[],"source":["if sum(dataset.isnull().sum()) > 0:\n","  print('要補缺失資料')"]},{"cell_type":"code","execution_count":170,"metadata":{"executionInfo":{"elapsed":522,"status":"ok","timestamp":1697885031056,"user":{"displayName":"林柏亦","userId":"18385432373658038035"},"user_tz":-480},"id":"m2NGWmz91Zur"},"outputs":[],"source":["X = dataset.iloc[:, :-1]\n","Y = dataset.iloc[:, -1]"]},{"cell_type":"code","execution_count":171,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":17,"status":"ok","timestamp":1697885031056,"user":{"displayName":"林柏亦","userId":"18385432373658038035"},"user_tz":-480},"id":"UNM0vixeNluO","outputId":"d38b8292-cfc1-4702-933b-cafa5a297f8a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(               model  year transmission  mileage fuelType  tax   mpg  \\\n"," 0               GT86  2016       Manual    24089   Petrol  265  36.2   \n"," 1               GT86  2017       Manual    18615   Petrol  145  36.2   \n"," 2               GT86  2015       Manual    27469   Petrol  265  36.2   \n"," 3               GT86  2017       Manual    14736   Petrol  150  36.2   \n"," 4               GT86  2017       Manual    36284   Petrol  145  36.2   \n"," ...              ...   ...          ...      ...      ...  ...   ...   \n"," 6733              IQ  2011    Automatic    30000   Petrol   20  58.9   \n"," 6734   Urban Cruiser  2011       Manual    36154   Petrol  125  50.4   \n"," 6735   Urban Cruiser  2012       Manual    46000   Diesel  125  57.6   \n"," 6736   Urban Cruiser  2011       Manual    60700   Petrol  125  50.4   \n"," 6737   Urban Cruiser  2011       Manual    45128   Petrol  125  50.4   \n"," \n","       engineSize  \n"," 0            2.0  \n"," 1            2.0  \n"," 2            2.0  \n"," 3            2.0  \n"," 4            2.0  \n"," ...          ...  \n"," 6733         1.0  \n"," 6734         1.3  \n"," 6735         1.4  \n"," 6736         1.3  \n"," 6737         1.3  \n"," \n"," [6738 rows x 8 columns],\n"," 0       16000\n"," 1       15995\n"," 2       13998\n"," 3       18998\n"," 4       17498\n","         ...  \n"," 6733     5500\n"," 6734     4985\n"," 6735     4995\n"," 6736     3995\n"," 6737     4495\n"," Name: price, Length: 6738, dtype: int64)"]},"metadata":{},"execution_count":171}],"source":["X, Y"]},{"cell_type":"markdown","metadata":{"id":"7mV1YIKo_kqV"},"source":["類別資料數位化."]},{"cell_type":"code","execution_count":172,"metadata":{"executionInfo":{"elapsed":16,"status":"ok","timestamp":1697885031056,"user":{"displayName":"林柏亦","userId":"18385432373658038035"},"user_tz":-480},"id":"MuieIpVw9y_v"},"outputs":[],"source":["# 先檢查是否存在 HappyML 這個資料夾，若沒有，則下載\n","import os\n","if not os.path.isdir(\"HappyML\"):\n","  os.system(\"git clone https://github.com/cnchi/HappyML.git\")\n","import HappyML.preprocessor as pp\n","\n","# 使用獨熱編碼器(one-hot encoding)，將自變數 X 數位化\n","X = pp.onehot_encoder(X, columns = [0, 2, 4], remove_trap = True)\n","\n","# 使用標籤編碼器，將應變數 Y 數位化\n","from sklearn.preprocessing import LabelEncoder\n","\n","labelEncoder = LabelEncoder() # NO 換成 0, Yes 換成 1.\n","Y = labelEncoder.fit_transform(Y).astype(\"float64\") # 轉成小數"]},{"cell_type":"markdown","source":["Note: 此處的one-hot要將各類別的column分開再併起來，之後再來研究，先暫時擱置著"],"metadata":{"id":"VYZk2IUh5EdZ"}},{"cell_type":"markdown","metadata":{"id":"fVeRjD8aA1R8"},"source":["切割訓練集和測試集"]},{"cell_type":"code","execution_count":173,"metadata":{"executionInfo":{"elapsed":16,"status":"ok","timestamp":1697885031056,"user":{"displayName":"林柏亦","userId":"18385432373658038035"},"user_tz":-480},"id":"o1O6SRauAlv-"},"outputs":[],"source":["from sklearn.model_selection import train_test_split\n","\n","X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=0)"]},{"cell_type":"code","execution_count":174,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":16,"status":"ok","timestamp":1697885031056,"user":{"displayName":"林柏亦","userId":"18385432373658038035"},"user_tz":-480},"id":"hHCzaPoBA9HI","outputId":"2d047fd6-a8c0-44fc-c45e-2ad24cf57a04"},"outputs":[{"output_type":"stream","name":"stdout","text":["5390\n"]}],"source":["print(len(X_train))"]},{"cell_type":"markdown","metadata":{"id":"7vHhIrLvBG9Q"},"source":["特徵縮放"]},{"cell_type":"code","execution_count":175,"metadata":{"executionInfo":{"elapsed":13,"status":"ok","timestamp":1697885031056,"user":{"displayName":"林柏亦","userId":"18385432373658038035"},"user_tz":-480},"id":"fcSEnSEkBAhm"},"outputs":[],"source":["from sklearn.preprocessing import StandardScaler\n","\n","sc_X = StandardScaler().fit(X_train)\n","X_train = sc_X.transform(X_train)\n","X_test = sc_X.transform(X_test)"]},{"cell_type":"code","execution_count":176,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":13,"status":"ok","timestamp":1697885031056,"user":{"displayName":"林柏亦","userId":"18385432373658038035"},"user_tz":-480},"id":"HGbrABD4Bars","outputId":"25583b89-c923-498e-dfae-bc4d5e260290"},"outputs":[{"output_type":"stream","name":"stdout","text":["[[-0.13177649  1.56617841 -0.2792848  ... -1.28400007  0.37953844\n","  -1.08498088]\n"," [-0.13177649 -0.63849686 -0.2792848  ...  0.67778175 -0.98330515\n","   0.0582876 ]\n"," [-0.13177649 -0.63849686 -0.2792848  ... -0.87811418 -0.27281797\n","  -1.08498088]\n"," ...\n"," [-0.13177649 -0.63849686 -0.2792848  ...  0.67778175 -0.98330515\n","   0.0582876 ]\n"," [-0.13177649 -0.63849686 -0.2792848  ... -0.87811418 -0.49888207\n","  -0.39901979]\n"," [-0.13177649 -0.63849686 -0.2792848  ... -1.28400007  1.47756408\n","   0.0582876 ]]\n"]}],"source":["print(X_train)"]},{"cell_type":"markdown","metadata":{"id":"pKAHluLacj8G"},"source":["## Construct a Nerve Network"]},{"cell_type":"code","execution_count":177,"metadata":{"executionInfo":{"elapsed":13,"status":"ok","timestamp":1697885031057,"user":{"displayName":"林柏亦","userId":"18385432373658038035"},"user_tz":-480},"id":"sK3Af5aFbahy"},"outputs":[],"source":["from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense\n","\n","regression_model = Sequential()\n","regression_model.add(Dense(input_dim=X_train.shape[1], units=X_train.shape[0]/(5* (X_train.shape[1]+8)), kernel_initializer=\"glorot_normal\", activation=\"relu\"))\n","regression_model.add(Dense(units=8, kernel_initializer=\"glorot_normal\", activation=\"relu\"))\n","regression_model.add(Dense(units=1, kernel_initializer=\"glorot_normal\", activation=\"linear\"))"]},{"cell_type":"markdown","metadata":{"id":"JWaePISVgRNU"},"source":["觀察神經網路."]},{"cell_type":"code","execution_count":178,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":13,"status":"ok","timestamp":1697885031057,"user":{"displayName":"林柏亦","userId":"18385432373658038035"},"user_tz":-480},"id":"OP22x5kXgRNf","outputId":"aa6748e6-7117-4a5f-ac4f-1f55d273454b"},"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_6\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense_18 (Dense)            (None, 29)                841       \n","                                                                 \n"," dense_19 (Dense)            (None, 8)                 240       \n","                                                                 \n"," dense_20 (Dense)            (None, 1)                 9         \n","                                                                 \n","=================================================================\n","Total params: 1,090\n","Trainable params: 1,090\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","--------------------------------------------------------------------------------\n","[<KerasTensor: shape=(None, 28) dtype=float32 (created by layer 'dense_18_input')>]\n","--------------------------------------------------------------------------------\n","[<KerasTensor: shape=(None, 1) dtype=float32 (created by layer 'dense_20')>]\n"]}],"source":["print(regression_model.summary())\n","print('-'*80)\n","print(regression_model.inputs)\n","print('-'*80)\n","print(regression_model.outputs)"]},{"cell_type":"markdown","metadata":{"id":"1FGUjx5mgX5F"},"source":["編譯 神經網路"]},{"cell_type":"code","execution_count":179,"metadata":{"executionInfo":{"elapsed":10,"status":"ok","timestamp":1697885031057,"user":{"displayName":"林柏亦","userId":"18385432373658038035"},"user_tz":-480},"id":"6ohjn4H8gX5G"},"outputs":[],"source":["regression_model.compile(optimizer=\"adam\", loss=\"mse\", metrics=[\"mse\"])"]},{"cell_type":"markdown","metadata":{"id":"uM4XBZatgX5G"},"source":["## 模型訓練與校正"]},{"cell_type":"code","execution_count":180,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":23597,"status":"ok","timestamp":1697885054645,"user":{"displayName":"林柏亦","userId":"18385432373658038035"},"user_tz":-480},"id":"p7_KAZhTgX5G","outputId":"b9e83048-2b93-4962-c375-8551d64917c6"},"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/10\n","863/863 [==============================] - 3s 2ms/step - loss: 1117569.0000 - mse: 1117569.0000 - val_loss: 701060.5000 - val_mse: 701060.5000\n","Epoch 2/10\n","863/863 [==============================] - 2s 2ms/step - loss: 236711.5938 - mse: 236711.5938 - val_loss: 59505.7617 - val_mse: 59505.7617\n","Epoch 3/10\n","863/863 [==============================] - 2s 2ms/step - loss: 34285.2930 - mse: 34285.2930 - val_loss: 28301.2812 - val_mse: 28301.2812\n","Epoch 4/10\n","863/863 [==============================] - 3s 3ms/step - loss: 22475.5605 - mse: 22475.5605 - val_loss: 22384.3789 - val_mse: 22384.3789\n","Epoch 5/10\n","863/863 [==============================] - 3s 3ms/step - loss: 18807.9746 - mse: 18807.9746 - val_loss: 19267.5273 - val_mse: 19267.5273\n","Epoch 6/10\n","863/863 [==============================] - 3s 4ms/step - loss: 16940.8203 - mse: 16940.8184 - val_loss: 17595.8711 - val_mse: 17595.8711\n","Epoch 7/10\n","863/863 [==============================] - 2s 3ms/step - loss: 15899.5771 - mse: 15899.5771 - val_loss: 17077.0469 - val_mse: 17077.0469\n","Epoch 8/10\n","863/863 [==============================] - 2s 2ms/step - loss: 15293.2598 - mse: 15293.2598 - val_loss: 16547.6055 - val_mse: 16547.6055\n","Epoch 9/10\n","863/863 [==============================] - 2s 2ms/step - loss: 14891.7549 - mse: 14891.7549 - val_loss: 15686.7588 - val_mse: 15686.7588\n","Epoch 10/10\n","863/863 [==============================] - 2s 2ms/step - loss: 14560.0400 - mse: 14560.0400 - val_loss: 15382.5479 - val_mse: 15382.5479\n"]}],"source":["epochs_metrics = regression_model.fit(x=X_train, y=Y_train, validation_split=0.2, batch_size=5, epochs=10)"]},{"cell_type":"code","execution_count":181,"metadata":{"executionInfo":{"elapsed":27,"status":"ok","timestamp":1697885054645,"user":{"displayName":"林柏亦","userId":"18385432373658038035"},"user_tz":-480},"id":"PivyYFnHgqCE"},"outputs":[],"source":["import matplotlib.pyplot as plt"]},{"cell_type":"code","execution_count":182,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":470},"executionInfo":{"elapsed":1326,"status":"ok","timestamp":1697885055953,"user":{"displayName":"林柏亦","userId":"18385432373658038035"},"user_tz":-480},"id":"1WGnX1fwscKU","outputId":"51ec9c5d-1581-4186-a6f1-5fe4b2b2f442"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.legend.Legend at 0x7c46e5245ab0>"]},"metadata":{},"execution_count":182},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["epochs = range(1, len(epochs_metrics.history['loss']) +1)\n","loss = epochs_metrics.history['loss']\n","val_loss = epochs_metrics.history['val_loss']\n","plt.figure()\n","plt.plot(epochs, loss, 'c*-', label = 'Training Loss')\n","plt.plot(epochs, val_loss, 'g--', label = 'Validation Loss')\n","plt.title('Training and Validation Loss')\n","plt.legend()"]},{"cell_type":"markdown","metadata":{"id":"Q4FlsFVdqgf5"},"source":["## 模型預測與評估"]},{"cell_type":"code","execution_count":207,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":442},"executionInfo":{"elapsed":608,"status":"ok","timestamp":1697885796350,"user":{"displayName":"林柏亦","userId":"18385432373658038035"},"user_tz":-480},"id":"Ox8fzLy_qggA","outputId":"ca0a616b-2214-4acd-f381-3dcca02b3e2f"},"outputs":[{"output_type":"stream","name":"stdout","text":["43/43 [==============================] - 0s 2ms/step\n"]},{"output_type":"execute_result","data":{"text/plain":["        real         pred\n","0      988.0   981.024963\n","1     1619.0  1595.019897\n","2      649.0   746.595154\n","3      822.0   932.145325\n","4     1446.0  1578.974487\n","...      ...          ...\n","1343  1308.0  1368.834839\n","1344   884.0   832.917297\n","1345   692.0   726.851990\n","1346  1829.0  1915.865479\n","1347  1126.0  1055.563843\n","\n","[1348 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-b3f12e8b-88aa-4f1b-95ad-70c47be3d445\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>real</th>\n","      <th>pred</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>988.0</td>\n","      <td>981.024963</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1619.0</td>\n","      <td>1595.019897</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>649.0</td>\n","      <td>746.595154</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>822.0</td>\n","      <td>932.145325</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1446.0</td>\n","      <td>1578.974487</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1343</th>\n","      <td>1308.0</td>\n","      <td>1368.834839</td>\n","    </tr>\n","    <tr>\n","      <th>1344</th>\n","      <td>884.0</td>\n","      <td>832.917297</td>\n","    </tr>\n","    <tr>\n","      <th>1345</th>\n","      <td>692.0</td>\n","      <td>726.851990</td>\n","    </tr>\n","    <tr>\n","      <th>1346</th>\n","      <td>1829.0</td>\n","      <td>1915.865479</td>\n","    </tr>\n","    <tr>\n","      <th>1347</th>\n","      <td>1126.0</td>\n","      <td>1055.563843</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1348 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b3f12e8b-88aa-4f1b-95ad-70c47be3d445')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b3f12e8b-88aa-4f1b-95ad-70c47be3d445 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b3f12e8b-88aa-4f1b-95ad-70c47be3d445');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0630bee3-f8d5-4b31-8b54-72fbc6d3bbaa\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0630bee3-f8d5-4b31-8b54-72fbc6d3bbaa')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0630bee3-f8d5-4b31-8b54-72fbc6d3bbaa button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":207}],"source":["# Predict\n","import pandas as pd\n","Y_pred = pd.DataFrame(regression_model.predict(x=X_test), columns = ['pred'])\n","\n","# Show the Predict Result\n","Y_test = pd.DataFrame(Y_test, columns = ['real'])\n","df = pd.concat([Y_test, Y_pred], axis=1)\n","df"]},{"cell_type":"code","execution_count":185,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":915,"status":"ok","timestamp":1697885105996,"user":{"displayName":"林柏亦","userId":"18385432373658038035"},"user_tz":-480},"id":"qqI2KdZIqggA","outputId":"a42770dc-cf79-45c7-f659-5285f3b0090a"},"outputs":[{"output_type":"stream","name":"stdout","text":["43/43 [==============================] - 0s 7ms/step - loss: 13837.8711 - mse: 13837.8711\n","Loss of Testing Set: 13837.87109375\n","MSE of Testing Set: 13837.87109375\n"]}],"source":["# Evaluation\n","test_loss, test_mse = regression_model.evaluate(X_test, Y_test)\n","print(\"Loss of Testing Set:\", test_loss)\n","print(\"MSE of Testing Set:\", test_mse)"]}],"metadata":{"accelerator":"TPU","colab":{"collapsed_sections":["XE_MT11OyPvG","DrS43LriaPmK","pj5mSDdTaTgh","kN3T96tPaXpk","umUOXxckaXYX","pKAHluLacj8G"],"provenance":[],"mount_file_id":"1s5OdCbB4tmOL4eAX8_M8FkdfP9nb0sIx","authorship_tag":"ABX9TyNkin/JY4Cm5OM97RfYg0km"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}