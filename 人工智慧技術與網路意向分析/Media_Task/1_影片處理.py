# -*- coding: utf-8 -*-
"""1. 影片處理

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13UyhauQhEldiDWg4uRi3zXjeOl_manQy

## 範例：影片處理



*   使用 ffmpeg 工具，縮短、裁剪影片（在本機端跑可省略此步驟）
*   使用 opencv 讀入影片，並執行：

> 1.   讀取特定影格
> 2.   儲存影格

*   使用 paddleocr 偵測及辨識文字

三立新聞片段:
https://drive.google.com/file/d/15qXci-z9-lZNhfnVCDSDbrM0K01UBUcu/view?usp=share_link
"""

# 先抓今天要用的影片
# 我用三立新聞片段

!wget --no-check-certificate "https://drive.google.com/uc?export=download&id=15qXci-z9-lZNhfnVCDSDbrM0K01UBUcu" -O 三立.mp4

# 使用 ffmpeg 工具，縮短、裁剪影片
# 先看一下 ffmpeg 的參數
!ffmpeg

# 如果要把檔案切小一點的話....
# 切10秒鐘就好
!ffmpeg -ss 00:00:00 -to 00:00:10 -i 三立.mp4 -c copy a_video.mp4

"""(2) 使用 opencv 讀入影片，並執行：


1.   讀取特定影格
2.   儲存影格



"""

from IPython.display import display, Javascript, HTML
from google.colab.output import eval_js
from base64 import b64encode

# 我們剛剛切短的影片檔
video_path = "三立.mp4" #'a_video.mp4' #"三立.mp4" #'video_name.mp4'

# 先看看影片整體內容?

mp4 = open(video_path,'rb').read()
decoded_vid = "data:video/mp4;base64," + b64encode(mp4).decode()
HTML(f'<video width=400 controls><source src={decoded_vid} type="video/mp4"></video>')

# 使用 opencv 套件處理影片
import cv2
from google.colab.patches import cv2_imshow

input_file = 'a_video.mp4'
video_cap = cv2.VideoCapture(input_file)
proc_frame_index = 100

# Check if camera opened successfully
if (video_cap.isOpened()== False):
  print("Error opening video stream or file")

cur_index = 0
# Read until video is completed
while(video_cap.isOpened()):
  # Capture frame-by-frame : 瘋狂讀取影格
  ret, frame = video_cap.read()
  if ret == True and cur_index > proc_frame_index:
    # Display the resulting frame
    cv2_imshow(frame)
    cv2.imwrite('a_frame.jpg', frame)
    break

  # Break the loop
  else:
    cur_index = cur_index + 1

"""(3) 再次使用［文字偵測/辨識框架］PaddleOCR"""

# 安裝必要套件
!pip install paddleocr
!pip install paddlepaddle
!pip install Polygon3
!pip install lanms

"""下載整個官方 git，以取得額外資源（例如字型....）"""

!git clone https://github.com/PaddlePaddle/PaddleOCR

from paddleocr import PaddleOCR,draw_ocr
import logging

root_logger= logging.getLogger()
root_logger.setLevel(logging.INFO) # or whatever
handler = logging.FileHandler('test_example_1.log', 'w', 'utf-8') # or whatever
handler.setFormatter(logging.Formatter('%(name)s %(message)s')) # or whatever
root_logger.addHandler(handler)

# Paddleocr supports Chinese, English, French, German, Korean and Japanese.
# You can set the parameter `lang` as `ch`, `en`, `french`, `german`, `korean`, `japan`
# to switch the language model in order.
ocr = PaddleOCR(use_angle_cls=True, lang='ch') # need to run only once to download and load model into memory
img_path = './a_frame.jpg'
result = ocr.ocr(img_path, cls=True)
for idx in range(len(result)):
    res = result[idx]
    for line in res:
        #print(line)
        logging.info(line)
        #logging.info(''.join(map(str,line)).encode(encoding='utf-8').decode())

# draw result
from PIL import Image

result = result[0]
image = Image.open(img_path).convert('RGB')
boxes = [line[0] for line in result]
txts = [line[1][0] for line in result]
scores = [line[1][1] for line in result]
#im_show = draw_ocr(image, boxes, txts, scores, font_path='./PaddleOCR/doc/fonts/simfang.ttf')
im_show = draw_ocr(image, boxes, txts, scores, font_path='./PaddleOCR/doc/fonts/chinese_cht.ttf')
im_show = Image.fromarray(im_show)
im_show.save(img_path+'_result.jpg')

"""## Quiz-2: 我們今天提供了六家電視台的新聞片段，請選擇其中一個片段，指定一個特定影格，並執行範例一。請問你覺得文字辨識的結果，是否符合你的期待？"""

